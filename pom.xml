<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jenkins-ci.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>1.457</version>
	</parent>
	<artifactId>build-pipeline-plugin</artifactId>
	<version>1.3.4-SNAPSHOT</version>
	<packaging>hpi</packaging>
	<name>Build Pipeline Plugin</name>
	<description>This plugin provides build pipeline functionality to Hudson and Jenkins.  This allows a chain of jobs to be visualised in a new view.  Manual jobs in the pipeline can be triggered by a user with the appropriate permissions manually confirming.</description>
	<url>https://wiki.jenkins-ci.org/display/JENKINS/Build+Pipeline+Plugin</url>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:hg:https://build-pipeline-plugin.googlecode.com/hg/</connection>
		<developerConnection>scm:hg:https://build-pipeline-plugin.googlecode.com/hg/</developerConnection>
		<url>https://build-pipeline-plugin.googlecode.com/hg/</url>
	</scm>
	<properties>
		<code.coverage.percentage>50</code.coverage.percentage>
		<checkstyle.rules.file>checkstyle_rules.xml</checkstyle.rules.file>
		<pmd.config.file>pmd_rules.xml</pmd.config.file>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<groovy.version>1.8.6</groovy.version>
	</properties>
	<developers>
		<developer>
			<id>centrum</id>
			<name>Centrum Systems</name>
			<email>plugins@centrumsystems.com.au</email>
			<url>http://www.centrumsystems.com.au</url>
		</developer>
	</developers>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<version>0.6-groovy-1.8</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-all</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
			<scope>provided</scope>
		</dependency>
    <dependency>
 			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>jquery</artifactId>
			<version>1.7.2-1</version>
		</dependency>
		<!-- Optional dependencies for using Spock -->
		<dependency>
			<!-- enables mocking of classes (in addition to interfaces) -->
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- enables mocking of classes without default constructor (together with 
				CGLIB) -->
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- only necessary if Hamcrest matchers are used -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jenkins-ci.plugins</groupId>
			<artifactId>dashboard-view</artifactId>
			<version>2.2</version>
			<optional>true</optional>
		</dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>parameterized-trigger</artifactId>
            <version>2.43.1</version>
            <optional>true</optional>
        </dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.4</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<providerSelection>1.8</providerSelection>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.gmaven.runtime</groupId>
						<artifactId>gmaven-runtime-1.8</artifactId>
						<version>1.4</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>${groovy.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.6</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<configLocation>${checkstyle.rules.file}</configLocation>
					<failsOnError>true</failsOnError>
					<violationSeverity>warning</violationSeverity>
					<propertyExpansion>basedir=${basedir}</propertyExpansion>
					<consoleOutput>true</consoleOutput>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<rulesets>
						<ruleset>${pmd.config.file}</ruleset>
					</rulesets>
					<excludes>
						<exclude>**/generated-sources/**</exclude>
					</excludes>
					<failOnViolation>false</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.3.2</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<effort>Max</effort>
					<threshold>Medium</threshold>
					<xmlOutput>true</xmlOutput>
					<excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<mavenExecutorId>forked-path</mavenExecutorId>
					<goals>deploy</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0</version>
				<!--$NO-MVN-MAN-VER$ -->
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jenkins-ci.tools</groupId>
										<artifactId>maven-hpi-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>insert-test</goal>
											<goal>resolve-test-dependencies</goal>
											<goal>test-hpl</goal>
											<goal>validate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>default-resources</goal>
											<goal>default-test-resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>maven.jenkins-ci.org</id>
			<url>http://maven.jenkins-ci.org:8081/content/repositories/releases/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>maven-central</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>maven.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>maven-central</id>
			<url>http://repo1.maven.org/maven2</url>
		</pluginRepository>
		<pluginRepository>
			<id>maven.jenkins-ci.org</id>
			<url>http://repo.jenkins-ci.org/public</url>
		</pluginRepository>
	</pluginRepositories>

</project>