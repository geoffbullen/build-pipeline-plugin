<j:jelly xmlns:j="jelly:core"
         xmlns:st="jelly:stapler"
         xmlns:d="jelly:define"
         xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson"
         xmlns:f="/lib/form">
    <!-- projects header -->

    <div class="pipeline-wrapper header">
        <div class="pipeline-info"></div>
        <div class="pipeline">
            <table class="pipelines">
                <tbody>
                    <j:forEach begin="${0}" end="${buildPipelineForm.getGridHeight() - 1}" indexVar="x">
                        <tr class="project-pipeline">
                            <j:forEach begin="${0}" end="${buildPipelineForm.getGridWidth() - 1}" indexVar="y">
                                <j:set var="project" type="au.com.centrumsystems.hudson.plugin.buildpipeline.ProjectForm" value="${projectGrid.get(x,y)}"/>
                                <j:if test="${project != null}">
                                    <!-- Checking if the cell to be added corresponds to the one containing build parameters. -->
                                    <j:choose>
                                        <j:when test="${(y == 0 &amp;&amp; x == 0)}">
                                            <!-- Expanding the cell to multiple rows in order to fix an issue which stretches the UI. -->
                                            <td id="project-${project.getId()}" rowspan="${buildPipelineForm.getGridHeight()}"></td>
                                        </j:when>
                                        <j:otherwise>
                                            <td id="project-${project.getId()}"></td>
                                        </j:otherwise>
                                    </j:choose>
                                    <script>
                                        //save project proxies for future reference (being able to refresh project cards)
                                        buildPipeline.projectProxies[${project.getId()}] = <st:bind value="${project}" />;
                                        jQuery("#project-${project.getId()}").append(buildPipeline.projectCardTemplate(${project.asJSON()}));
                                    </script>
                                    <j:if test="${(y + 1 != buildPipelineForm.getGridWidth())}">
                                        <td class="next">
                                            <!-- Changing length to size() to get rid of arrows when there are no more child jobs.-->
                                            <j:if test="${!(project.getDependencies().size() == 0)}">
                                                <span class="status next">
                                                    <img src="${rootURL}/images/24x24/next.png" />
                                                </span>
                                            </j:if>
                                        </td>
                                    </j:if>
                                </j:if>
                                <j:if test="${project == null}">
                                    <!-- Skipping the "filler" td for the first column -->
                                    <j:if test="${y != 0}">
                                        <td></td>
                                    </j:if>
                                    <j:if test="${y + 1 != buildPipelineForm.getGridWidth()}">
                                        <j:set var="nextIndex" value="${y + 1}"/>
                                        <td class="next">
                                            <j:if test="${projectGrid.get(x,nextIndex)!=null}">
                                                <span class="status next">
                                                    <img src="${rootURL}/images/24x24/next.png" />
                                                </span>
                                            </j:if>
                                        </td>
                                    </j:if>
                                </j:if>
                            </j:forEach>
                        </tr>
                    </j:forEach>
                </tbody>
            </table>
        </div>
    </div>

</j:jelly>

